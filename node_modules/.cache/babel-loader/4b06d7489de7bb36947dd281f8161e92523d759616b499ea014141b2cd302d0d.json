{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\nimport { Container, Typography, Card, CardContent, Button, Grid, Tooltip, Badge, Paper, Table, TableBody, TableCell, TableHead, TableRow, FormControlLabel, Divider, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  // State for communications\n  const [communications] = useState([{\n    company: \"Company 1\",\n    type: \"LinkedIn Post\",\n    date: \"2023-09-01\",\n    isPast: true,\n    notes: \"Completed with good engagement\"\n  }, {\n    company: \"Company 2\",\n    type: \"Email\",\n    date: \"2023-10-20\",\n    isPast: true,\n    notes: \"Follow-up needed\"\n  }, {\n    company: \"Company 3\",\n    type: \"Phone Call\",\n    date: \"2024-01-15\",\n    isPast: false,\n    notes: \"\"\n  },\n  // upcoming\n  {\n    company: \"Company 4\",\n    type: \"LinkedIn Message\",\n    date: \"2024-02-10\",\n    isPast: false,\n    notes: \"\"\n  } // upcoming\n  ]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [companies, setCompanies] = useState([{\n    name: 'Company A',\n    communicationDueDate: '2024-12-25',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false // Checkbox selection state\n  }, {\n    name: 'Company B',\n    communicationDueDate: '2024-12-26',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false // Checkbox selection state\n  }, {\n    name: 'Company C',\n    communicationDueDate: '2024-12-30',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false // Checkbox selection state\n  }]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedCompanies, setSelectedCompanies] = useState([]); // Track selected companies for the communication\n  const [communicationDetails, setCommunicationDetails] = useState({\n    type: \"\",\n    date: \"\",\n    notes: \"\"\n  });\n\n  // Handle checkbox selection for multiple companies\n  const handleCompanySelect = index => {\n    const updatedCompanies = [...companies];\n    updatedCompanies[index].isSelected = !updatedCompanies[index].isSelected;\n    setCompanies(updatedCompanies);\n\n    // Update selected companies list\n    setSelectedCompanies(updatedCompanies.filter(company => company.isSelected));\n  };\n\n  // Open communication modal\n  const openModal = () => {\n    if (selectedCompanies.length > 0) {\n      setModalOpen(true);\n    } else {\n      alert(\"Please select at least one company.\");\n    }\n  };\n\n  // Handle form submission (log communication)\n  const handleSubmitCommunication = () => {\n    // Reset highlights (red or yellow) for selected companies\n    const updatedCompanies = companies.map(company => {\n      if (company.isSelected) {\n        company.highlightDisabled = true; // Disable highlight after communication is logged\n      }\n      return company;\n    });\n    setCompanies(updatedCompanies);\n\n    // You could also store the new communication in your database or state here\n    console.log(\"Logged communication for:\", selectedCompanies);\n    console.log(\"Communication details:\", communicationDetails);\n\n    // Close modal after submission\n    setModalOpen(false);\n    setCommunicationDetails({\n      type: \"\",\n      date: \"\",\n      notes: \"\"\n    });\n  };\n\n  // Handle modal input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCommunicationDetails({\n      ...communicationDetails,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      marginBottom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: 1,\n          color: \"error\",\n          overlap: \"circular\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n        onChange: setSelectedDate,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Date: \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: companies.map((company, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: company.highlightDisabled ? 'white' : 'transparent',\n            transition: 'background-color 0.3s'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Next Communication Due: \", format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: company.isSelected,\n                onChange: () => handleCompanySelect(index),\n                name: `select-${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this),\n              label: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            marginTop: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: openModal,\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 20\n      }, this),\n      children: \"Communication Performed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Log Communication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Type of Communication\",\n          name: \"type\",\n          value: communicationDetails.type,\n          onChange: handleInputChange,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Date of Communication\",\n          type: \"date\",\n          name: \"date\",\n          value: communicationDetails.date,\n          onChange: handleInputChange,\n          InputLabelProps: {\n            shrink: true\n          },\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Add Notes\",\n          name: \"notes\",\n          value: communicationDetails.notes,\n          onChange: handleInputChange,\n          multiline: true,\n          rows: 4,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalOpen(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmitCommunication,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        marginTop: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Five Communications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next Scheduled Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: communications.map((comm, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.isPast ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: `Notes: ${comm.notes}`,\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    cursor: \"pointer\",\n                    textDecoration: \"underline\"\n                  },\n                  children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 32\n                }, this)\n                // onClick={() => handleAddCommunication(comm.company)}\n                ,\n                children: \"Log Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"upi3Z7vjbhfTz3a9VywUNigHQ4Y=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","ReactCalendar","Container","Typography","Card","CardContent","Button","Grid","Tooltip","Badge","Paper","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Divider","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","TextField","NotificationsIcon","AddIcon","format","parseISO","jsxDEV","_jsxDEV","UserDashboard","_s","communications","company","type","date","isPast","notes","selectedDate","setSelectedDate","Date","companies","setCompanies","name","communicationDueDate","highlightDisabled","communicationStatus","isSelected","modalOpen","setModalOpen","selectedCompanies","setSelectedCompanies","communicationDetails","setCommunicationDetails","handleCompanySelect","index","updatedCompanies","filter","openModal","length","alert","handleSubmitCommunication","map","console","log","handleInputChange","e","value","target","children","container","alignItems","spacing","marginBottom","item","badgeContent","color","overlap","anchorOrigin","vertical","horizontal","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","style","display","flexDirection","onChange","toLocaleDateString","xs","sm","md","sx","backgroundColor","transition","control","checked","label","marginTop","onClick","startIcon","open","onClose","fullWidth","InputLabelProps","shrink","multiline","rows","align","comm","title","arrow","cursor","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\r\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  Badge,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  FormControlLabel,\r\n  Divider,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\r\n\r\nfunction UserDashboard() {\r\n  // State for communications\r\n  const [communications] = useState([\r\n    { company: \"Company 1\", type: \"LinkedIn Post\", date: \"2023-09-01\", isPast: true, notes: \"Completed with good engagement\" },\r\n    { company: \"Company 2\", type: \"Email\", date: \"2023-10-20\", isPast: true, notes: \"Follow-up needed\" },\r\n    { company: \"Company 3\", type: \"Phone Call\", date: \"2024-01-15\", isPast: false, notes: \"\" }, // upcoming\r\n    { company: \"Company 4\", type: \"LinkedIn Message\", date: \"2024-02-10\", isPast: false, notes: \"\" }, // upcoming\r\n  ]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [companies, setCompanies] = useState([\r\n    {\r\n      name: 'Company A',\r\n      communicationDueDate: '2024-12-25',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n      isSelected: false, // Checkbox selection state\r\n    },\r\n    {\r\n      name: 'Company B',\r\n      communicationDueDate: '2024-12-26',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n      isSelected: false, // Checkbox selection state\r\n    },\r\n    {\r\n      name: 'Company C',\r\n      communicationDueDate: '2024-12-30',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n      isSelected: false, // Checkbox selection state\r\n    },\r\n  ]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedCompanies, setSelectedCompanies] = useState([]); // Track selected companies for the communication\r\n  const [communicationDetails, setCommunicationDetails] = useState({\r\n    type: \"\",\r\n    date: \"\",\r\n    notes: \"\"\r\n  });\r\n\r\n  // Handle checkbox selection for multiple companies\r\n  const handleCompanySelect = (index) => {\r\n    const updatedCompanies = [...companies];\r\n    updatedCompanies[index].isSelected = !updatedCompanies[index].isSelected;\r\n    setCompanies(updatedCompanies);\r\n\r\n    // Update selected companies list\r\n    setSelectedCompanies(updatedCompanies.filter(company => company.isSelected));\r\n  };\r\n\r\n  // Open communication modal\r\n  const openModal = () => {\r\n    if (selectedCompanies.length > 0) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"Please select at least one company.\");\r\n    }\r\n  };\r\n\r\n  // Handle form submission (log communication)\r\n  const handleSubmitCommunication = () => {\r\n    // Reset highlights (red or yellow) for selected companies\r\n    const updatedCompanies = companies.map(company => {\r\n      if (company.isSelected) {\r\n        company.highlightDisabled = true; // Disable highlight after communication is logged\r\n      }\r\n      return company;\r\n    });\r\n    setCompanies(updatedCompanies);\r\n\r\n    // You could also store the new communication in your database or state here\r\n    console.log(\"Logged communication for:\", selectedCompanies);\r\n    console.log(\"Communication details:\", communicationDetails);\r\n\r\n    // Close modal after submission\r\n    setModalOpen(false);\r\n    setCommunicationDetails({\r\n      type: \"\",\r\n      date: \"\",\r\n      notes: \"\"\r\n    });\r\n  };\r\n\r\n  // Handle modal input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCommunicationDetails({\r\n      ...communicationDetails,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container alignItems=\"center\" spacing={2} marginBottom={2}>\r\n        <Grid item>\r\n          <Badge\r\n            badgeContent={1}\r\n            color=\"error\"\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n          >\r\n            <NotificationsIcon fontSize=\"large\" />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            User Dashboard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Calendar View */}\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        <h3>Select a Date</h3>\r\n        <ReactCalendar\r\n          onChange={setSelectedDate}\r\n          value={selectedDate}\r\n        />\r\n        <p>Selected Date: {selectedDate.toLocaleDateString()}</p>\r\n      </div>\r\n\r\n      {/* Company List with Checkbox for Selection */}\r\n      <Grid container spacing={2}>\r\n        {companies.map((company, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: company.highlightDisabled ? 'white' : 'transparent',\r\n                transition: 'background-color 0.3s',\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{company.name}</Typography>\r\n                <Typography>\r\n                  Next Communication Due: {format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')}\r\n                </Typography>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={company.isSelected}\r\n                      onChange={() => handleCompanySelect(index)}\r\n                      name={`select-${index}`}\r\n                    />\r\n                  }\r\n                  label=\"Select\"\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n            <Divider sx={{ marginTop: 2 }} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Button to Trigger Communication Logging */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={openModal}\r\n        startIcon={<AddIcon />}\r\n      >\r\n        Communication Performed\r\n      </Button>\r\n\r\n      {/* Communication Modal */}\r\n      <Dialog open={modalOpen} onClose={() => setModalOpen(false)}>\r\n        <DialogTitle>Log Communication</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Type of Communication\"\r\n            name=\"type\"\r\n            value={communicationDetails.type}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Date of Communication\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={communicationDetails.date}\r\n            onChange={handleInputChange}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Add Notes\"\r\n            name=\"notes\"\r\n            value={communicationDetails.notes}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={4}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setModalOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmitCommunication}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Communications Table with Tooltip for Notes */}\r\n      <Paper sx={{ marginTop: 4 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell><strong>Company Name</strong></TableCell>\r\n              <TableCell><strong>Last Five Communications</strong></TableCell>\r\n              <TableCell><strong>Next Scheduled Communication</strong></TableCell>\r\n              <TableCell align=\"center\"><strong>Actions</strong></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {communications.map((comm, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{comm.company}</TableCell>\r\n                <TableCell>\r\n                  {/* Tooltip on hover to show notes for completed communications */}\r\n                  {comm.isPast ? (\r\n                    <Tooltip title={`Notes: ${comm.notes}`} arrow>\r\n                      <Typography variant=\"body2\" sx={{ cursor: \"pointer\", textDecoration: \"underline\" }}>\r\n                        {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                      </Typography>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Typography variant=\"body2\">{comm.type} - {new Date(comm.date).toLocaleDateString()}</Typography>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{comm.type} - {new Date(comm.date).toLocaleDateString()}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    // onClick={() => handleAddCommunication(comm.company)}\r\n                  >\r\n                    Log Communication\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}