{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminDashboard(){// State to store companies, communication methods, etc.\nconst[companies,setCompanies]=useState([]);const[methods,setMethods]=useState([{name:\"LinkedIn Post\",sequence:1,mandatory:true},{name:\"LinkedIn Message\",sequence:2,mandatory:false},{name:\"Email\",sequence:3,mandatory:false},{name:\"Phone Call\",sequence:4,mandatory:false},{name:\"Other\",sequence:5,mandatory:false}]);// Fetch companies (API integration to your backend can be added here)\nuseEffect(()=>{// For now, mock data is used\nsetCompanies([{name:\"Company 1\",location:\"NY\",communicationPeriodicity:\"2 weeks\"},{name:\"Company 2\",location:\"LA\",communicationPeriodicity:\"1 week\"}]);},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert(\"Add company logic goes here\"),children:\"Add New Company\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Companies\"}),/*#__PURE__*/_jsx(\"ul\",{children:companies.map((company,index)=>/*#__PURE__*/_jsx(\"li\",{children:company.name},index))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Communication Methods\"}),/*#__PURE__*/_jsx(\"ul\",{children:methods.map((method,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[method.name,\" - \",method.sequence,\" - Mandatory: \",method.mandatory?'Yes':'No']},index))})]});}export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminDashboard","companies","setCompanies","methods","setMethods","name","sequence","mandatory","location","communicationPeriodicity","children","onClick","alert","map","company","index","method"],"sources":["C:/Users/varun/calender-app/src/components/Admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction AdminDashboard() {\r\n  // State to store companies, communication methods, etc.\r\n  const [companies, setCompanies] = useState([]);\r\n  const [methods, setMethods] = useState([\r\n    { name: \"LinkedIn Post\", sequence: 1, mandatory: true },\r\n    { name: \"LinkedIn Message\", sequence: 2, mandatory: false },\r\n    { name: \"Email\", sequence: 3, mandatory: false },\r\n    { name: \"Phone Call\", sequence: 4, mandatory: false },\r\n    { name: \"Other\", sequence: 5, mandatory: false },\r\n  ]);\r\n  \r\n  // Fetch companies (API integration to your backend can be added here)\r\n  useEffect(() => {\r\n    // For now, mock data is used\r\n    setCompanies([\r\n      { name: \"Company 1\", location: \"NY\", communicationPeriodicity: \"2 weeks\" },\r\n      { name: \"Company 2\", location: \"LA\", communicationPeriodicity: \"1 week\" },\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Dashboard</h2>\r\n      <button onClick={() => alert(\"Add company logic goes here\")}>\r\n        Add New Company\r\n      </button>\r\n      <h3>Companies</h3>\r\n      <ul>\r\n        {companies.map((company, index) => (\r\n          <li key={index}>{company.name}</li>\r\n        ))}\r\n      </ul>\r\n      <h3>Communication Methods</h3>\r\n      <ul>\r\n        {methods.map((method, index) => (\r\n          <li key={index}>\r\n            {method.name} - {method.sequence} - Mandatory: {method.mandatory ? 'Yes' : 'No'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,CACrC,CAAEW,IAAI,CAAE,eAAe,CAAEC,QAAQ,CAAE,CAAC,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvD,CAAEF,IAAI,CAAE,kBAAkB,CAAEC,QAAQ,CAAE,CAAC,CAAEC,SAAS,CAAE,KAAM,CAAC,CAC3D,CAAEF,IAAI,CAAE,OAAO,CAAEC,QAAQ,CAAE,CAAC,CAAEC,SAAS,CAAE,KAAM,CAAC,CAChD,CAAEF,IAAI,CAAE,YAAY,CAAEC,QAAQ,CAAE,CAAC,CAAEC,SAAS,CAAE,KAAM,CAAC,CACrD,CAAEF,IAAI,CAAE,OAAO,CAAEC,QAAQ,CAAE,CAAC,CAAEC,SAAS,CAAE,KAAM,CAAC,CACjD,CAAC,CAEF;AACAZ,SAAS,CAAC,IAAM,CACd;AACAO,YAAY,CAAC,CACX,CAAEG,IAAI,CAAE,WAAW,CAAEG,QAAQ,CAAE,IAAI,CAAEC,wBAAwB,CAAE,SAAU,CAAC,CAC1E,CAAEJ,IAAI,CAAE,WAAW,CAAEG,QAAQ,CAAE,IAAI,CAAEC,wBAAwB,CAAE,QAAS,CAAC,CAC1E,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,KAAA,QAAAW,QAAA,eACEb,IAAA,OAAAa,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBb,IAAA,WAAQc,OAAO,CAAEA,CAAA,GAAMC,KAAK,CAAC,6BAA6B,CAAE,CAAAF,QAAA,CAAC,iBAE7D,CAAQ,CAAC,cACTb,IAAA,OAAAa,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBb,IAAA,OAAAa,QAAA,CACGT,SAAS,CAACY,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC5BlB,IAAA,OAAAa,QAAA,CAAiBI,OAAO,CAACT,IAAI,EAApBU,KAAyB,CACnC,CAAC,CACA,CAAC,cACLlB,IAAA,OAAAa,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9Bb,IAAA,OAAAa,QAAA,CACGP,OAAO,CAACU,GAAG,CAAC,CAACG,MAAM,CAAED,KAAK,gBACzBhB,KAAA,OAAAW,QAAA,EACGM,MAAM,CAACX,IAAI,CAAC,KAAG,CAACW,MAAM,CAACV,QAAQ,CAAC,gBAAc,CAACU,MAAM,CAACT,SAAS,CAAG,KAAK,CAAG,IAAI,GADxEQ,KAEL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAf,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}