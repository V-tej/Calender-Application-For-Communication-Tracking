{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid, Tooltip, Badge, Paper, Table, TableBody, TableCell, TableHead, TableRow, FormControlLabel, Switch, Divider, Checkbox, Modal, Box, TextField } from \"@mui/material\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\n\n// User Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  // Existing state variables\n  const [communications, setCommunications] = useState([{\n    company: \"Company 1\",\n    type: \"LinkedIn Post\",\n    date: \"2023-09-01\",\n    isPast: true\n  }, {\n    company: \"Company 2\",\n    type: \"Email\",\n    date: \"2023-10-20\",\n    isPast: true\n  }, {\n    company: \"Company 3\",\n    type: \"Phone Call\",\n    date: \"2024-01-15\",\n    isPast: false\n  },\n  // upcoming\n  {\n    company: \"Company 4\",\n    type: \"LinkedIn Message\",\n    date: \"2024-02-10\",\n    isPast: false\n  } // upcoming\n  ]);\n  const [companies, setCompanies] = useState([{\n    name: 'Company A',\n    communicationDueDate: '2024-12-25',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }, {\n    name: 'Company B',\n    communicationDueDate: '2024-12-26',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }, {\n    name: 'Company C',\n    communicationDueDate: '2024-12-30',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }]);\n\n  // State for selected date, communication modal and selected companies\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [overdueCount, setOverdueCount] = useState(1);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [communicationData, setCommunicationData] = useState({\n    type: \"\",\n    date: \"\",\n    notes: \"\"\n  });\n\n  // Handle Modal state and form handling\n  const handleCommunicationModalOpen = () => setModalOpen(true);\n  const handleCommunicationModalClose = () => setModalOpen(false);\n  const handleCompanySelection = company => {\n    setSelectedCompanies(prev => {\n      if (prev.includes(company)) {\n        return prev.filter(c => c !== company);\n      } else {\n        return [...prev, company];\n      }\n    });\n  };\n  const handleCommunicationSubmit = () => {\n    const updatedCommunications = [...communications];\n    selectedCompanies.forEach(company => {\n      const companyCommunication = {\n        company,\n        type: communicationData.type,\n        date: communicationData.date,\n        isPast: new Date(communicationData.date) < new Date()\n      };\n      updatedCommunications.push(companyCommunication);\n\n      // Reset highlights for selected companies\n      const updatedCompanies = companies.map(item => {\n        if (selectedCompanies.includes(item.name)) {\n          item.highlightDisabled = true; // Reset highlight upon submission\n        }\n        return item;\n      });\n      setCompanies(updatedCompanies);\n    });\n    setCommunications(updatedCommunications);\n    setModalOpen(false); // Close the modal after submission\n  };\n  const getCommunicationsByDate = date => {\n    const formattedDate = date.toLocaleDateString();\n    return communications.filter(comm => comm.date === formattedDate);\n  };\n  const getRowColor = date => {\n    const today = new Date().toISOString().slice(0, 10);\n    const commDate = new Date(date).toISOString().slice(0, 10);\n    if (commDate < today) return \"#f8d7da\"; // Red for overdue\n    if (commDate === today) return \"#fff3cd\"; // Yellow for due today\n    return \"#ffffff\"; // White for future dates\n  };\n  const getHighlightColor = dueDate => {\n    const today = new Date();\n    const dueDateObj = parseISO(dueDate);\n    const isToday = format(today, 'yyyy-MM-dd') === format(dueDateObj, 'yyyy-MM-dd');\n    const isOverdue = today > dueDateObj;\n    if (isOverdue) return 'red';\n    if (isToday) return 'yellow';\n    return 'transparent'; // No highlight\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      marginBottom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: overdueCount,\n          color: \"error\",\n          overlap: \"circular\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n        onChange: setSelectedDate,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Date: \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        marginTop: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Five Communications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next Scheduled Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: communications.map((comm, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              backgroundColor: getRowColor(comm.date)\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Past communications details\",\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 32\n                }, this),\n                onClick: handleCommunicationModalOpen,\n                children: \"Log Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCommunicationModalClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          backgroundColor: 'white',\n          padding: 3,\n          boxShadow: 24,\n          width: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Log Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedCompanies.includes(\"Company A\"),\n            onChange: () => handleCompanySelection(\"Company A\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 22\n          }, this),\n          label: \"Company A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedCompanies.includes(\"Company B\"),\n            onChange: () => handleCompanySelection(\"Company B\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 22\n          }, this),\n          label: \"Company B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedCompanies.includes(\"Company C\"),\n            onChange: () => handleCompanySelection(\"Company C\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 22\n          }, this),\n          label: \"Company C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Type of Communication\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: communicationData.type,\n          onChange: e => setCommunicationData({\n            ...communicationData,\n            type: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"date\",\n          label: \"Date of Communication\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: communicationData.date,\n          onChange: e => setCommunicationData({\n            ...communicationData,\n            date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add Notes\",\n          fullWidth: true,\n          margin: \"normal\",\n          multiline: true,\n          value: communicationData.notes,\n          onChange: e => setCommunicationData({\n            ...communicationData,\n            notes: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"space-between\",\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCommunicationModalClose,\n            variant: \"outlined\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCommunicationSubmit,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"OeEVdQ2Op0PQdLTbF0R1usMuosg=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ReactCalendar","Container","Typography","Card","CardContent","CardActions","Button","Grid","Tooltip","Badge","Paper","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Switch","Divider","Checkbox","Modal","Box","TextField","NotificationsIcon","AddIcon","format","parseISO","jsxDEV","_jsxDEV","UserDashboard","_s","communications","setCommunications","company","type","date","isPast","companies","setCompanies","name","communicationDueDate","highlightDisabled","communicationStatus","selectedDate","setSelectedDate","Date","overdueCount","setOverdueCount","selectedCompanies","setSelectedCompanies","modalOpen","setModalOpen","communicationData","setCommunicationData","notes","handleCommunicationModalOpen","handleCommunicationModalClose","handleCompanySelection","prev","includes","filter","c","handleCommunicationSubmit","updatedCommunications","forEach","companyCommunication","push","updatedCompanies","map","item","getCommunicationsByDate","formattedDate","toLocaleDateString","comm","getRowColor","today","toISOString","slice","commDate","getHighlightColor","dueDate","dueDateObj","isToday","isOverdue","children","container","alignItems","spacing","marginBottom","badgeContent","color","overlap","anchorOrigin","vertical","horizontal","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","style","display","flexDirection","onChange","value","sx","marginTop","align","index","backgroundColor","title","arrow","startIcon","onClick","open","onClose","position","top","left","transform","padding","boxShadow","width","control","checked","label","fullWidth","margin","e","target","multiline","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\r\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  Badge,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  FormControlLabel,\r\n  Switch,\r\n  Divider,\r\n  Checkbox,\r\n  Modal,\r\n  Box,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\r\n\r\n// User Dashboard\r\nfunction UserDashboard() {\r\n  // Existing state variables\r\n  const [communications, setCommunications] = useState([\r\n    { company: \"Company 1\", type: \"LinkedIn Post\", date: \"2023-09-01\", isPast: true },\r\n    { company: \"Company 2\", type: \"Email\", date: \"2023-10-20\", isPast: true },\r\n    { company: \"Company 3\", type: \"Phone Call\", date: \"2024-01-15\", isPast: false }, // upcoming\r\n    { company: \"Company 4\", type: \"LinkedIn Message\", date: \"2024-02-10\", isPast: false }, // upcoming\r\n  ]);\r\n\r\n  const [companies, setCompanies] = useState([\r\n    {\r\n      name: 'Company A',\r\n      communicationDueDate: '2024-12-25',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n    {\r\n      name: 'Company B',\r\n      communicationDueDate: '2024-12-26',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n    {\r\n      name: 'Company C',\r\n      communicationDueDate: '2024-12-30',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n  ]);\r\n  \r\n  // State for selected date, communication modal and selected companies\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [overdueCount, setOverdueCount] = useState(1);\r\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [communicationData, setCommunicationData] = useState({\r\n    type: \"\",\r\n    date: \"\",\r\n    notes: \"\"\r\n  });\r\n\r\n  // Handle Modal state and form handling\r\n  const handleCommunicationModalOpen = () => setModalOpen(true);\r\n  const handleCommunicationModalClose = () => setModalOpen(false);\r\n\r\n  const handleCompanySelection = (company) => {\r\n    setSelectedCompanies(prev => {\r\n      if (prev.includes(company)) {\r\n        return prev.filter(c => c !== company);\r\n      } else {\r\n        return [...prev, company];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCommunicationSubmit = () => {\r\n    const updatedCommunications = [...communications];\r\n    selectedCompanies.forEach(company => {\r\n      const companyCommunication = {\r\n        company,\r\n        type: communicationData.type,\r\n        date: communicationData.date,\r\n        isPast: new Date(communicationData.date) < new Date()\r\n      };\r\n      updatedCommunications.push(companyCommunication);\r\n\r\n      // Reset highlights for selected companies\r\n      const updatedCompanies = companies.map((item) => {\r\n        if (selectedCompanies.includes(item.name)) {\r\n          item.highlightDisabled = true; // Reset highlight upon submission\r\n        }\r\n        return item;\r\n      });\r\n\r\n      setCompanies(updatedCompanies);\r\n    });\r\n\r\n    setCommunications(updatedCommunications);\r\n    setModalOpen(false); // Close the modal after submission\r\n  };\r\n\r\n  const getCommunicationsByDate = (date) => {\r\n    const formattedDate = date.toLocaleDateString();\r\n    return communications.filter((comm) => comm.date === formattedDate);\r\n  };\r\n\r\n  const getRowColor = (date) => {\r\n    const today = new Date().toISOString().slice(0, 10);\r\n    const commDate = new Date(date).toISOString().slice(0, 10);\r\n    if (commDate < today) return \"#f8d7da\"; // Red for overdue\r\n    if (commDate === today) return \"#fff3cd\"; // Yellow for due today\r\n    return \"#ffffff\"; // White for future dates\r\n  };\r\n\r\n  const getHighlightColor = (dueDate) => {\r\n    const today = new Date();\r\n    const dueDateObj = parseISO(dueDate);\r\n    const isToday = format(today, 'yyyy-MM-dd') === format(dueDateObj, 'yyyy-MM-dd');\r\n    const isOverdue = today > dueDateObj;\r\n\r\n    if (isOverdue) return 'red';\r\n    if (isToday) return 'yellow';\r\n    return 'transparent'; // No highlight\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container alignItems=\"center\" spacing={2} marginBottom={2}>\r\n        <Grid item>\r\n          <Badge\r\n            badgeContent={overdueCount}\r\n            color=\"error\"\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n          >\r\n            <NotificationsIcon fontSize=\"large\" />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            User Dashboard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Calendar View */}\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        <h3>Select a Date</h3>\r\n        <ReactCalendar\r\n          onChange={setSelectedDate}\r\n          value={selectedDate}\r\n        />\r\n        <p>Selected Date: {selectedDate.toLocaleDateString()}</p>\r\n      </div>\r\n\r\n      {/* Communications Table */}\r\n      <Paper sx={{ marginTop: 4 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell><strong>Company Name</strong></TableCell>\r\n              <TableCell><strong>Last Five Communications</strong></TableCell>\r\n              <TableCell><strong>Next Scheduled Communication</strong></TableCell>\r\n              <TableCell align=\"center\"><strong>Actions</strong></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {communications.map((comm, index) => (\r\n              <TableRow key={index} style={{ backgroundColor: getRowColor(comm.date) }}>\r\n                <TableCell>{comm.company}</TableCell>\r\n                <TableCell>\r\n                  <Tooltip title=\"Past communications details\" arrow>\r\n                    <Typography variant=\"body2\">\r\n                      {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleCommunicationModalOpen}\r\n                  >\r\n                    Log Communication\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      {/* Communication Modal */}\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCommunicationModalClose}\r\n      >\r\n        <Box sx={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          backgroundColor: 'white',\r\n          padding: 3,\r\n          boxShadow: 24,\r\n          width: 400\r\n        }}>\r\n          <Typography variant=\"h6\">Log Communication</Typography>\r\n          <FormControlLabel\r\n            control={<Checkbox\r\n              checked={selectedCompanies.includes(\"Company A\")}\r\n              onChange={() => handleCompanySelection(\"Company A\")}\r\n            />}\r\n            label=\"Company A\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox\r\n              checked={selectedCompanies.includes(\"Company B\")}\r\n              onChange={() => handleCompanySelection(\"Company B\")}\r\n            />}\r\n            label=\"Company B\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox\r\n              checked={selectedCompanies.includes(\"Company C\")}\r\n              onChange={() => handleCompanySelection(\"Company C\")}\r\n            />}\r\n            label=\"Company C\"\r\n          />\r\n          <TextField\r\n            label=\"Type of Communication\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={communicationData.type}\r\n            onChange={e => setCommunicationData({ ...communicationData, type: e.target.value })}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            label=\"Date of Communication\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={communicationData.date}\r\n            onChange={e => setCommunicationData({ ...communicationData, date: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Add Notes\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            value={communicationData.notes}\r\n            onChange={e => setCommunicationData({ ...communicationData, notes: e.target.value })}\r\n          />\r\n          <Grid container justifyContent=\"space-between\" style={{ marginTop: \"1rem\" }}>\r\n            <Button onClick={handleCommunicationModalClose} variant=\"outlined\">Cancel</Button>\r\n            <Button onClick={handleCommunicationSubmit} variant=\"contained\" color=\"primary\">Submit</Button>\r\n          </Grid>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}