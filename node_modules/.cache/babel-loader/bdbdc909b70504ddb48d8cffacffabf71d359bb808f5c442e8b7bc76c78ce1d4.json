{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NotificationIcon } from \"./NotificationIcon\"; // Notifications component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [companies, setCompanies] = useState([{\n    name: \"Company 1\",\n    communications: [{\n      type: \"Email\",\n      date: \"2023-12-20\"\n    }, {\n      type: \"LinkedIn Post\",\n      date: \"2023-12-15\"\n    }, {\n      type: \"Call\",\n      date: \"2023-12-01\"\n    }, {\n      type: \"Meeting\",\n      date: \"2023-11-20\"\n    }, {\n      type: \"Follow-Up\",\n      date: \"2023-11-10\"\n    }],\n    nextCommunication: {\n      type: \"Email\",\n      date: \"2023-12-26\"\n    }\n  }, {\n    name: \"Company 2\",\n    communications: [{\n      type: \"Call\",\n      date: \"2023-12-18\"\n    }, {\n      type: \"Email\",\n      date: \"2023-12-12\"\n    }, {\n      type: \"LinkedIn Post\",\n      date: \"2023-12-05\"\n    }, {\n      type: \"Meeting\",\n      date: \"2023-11-25\"\n    }, {\n      type: \"Follow-Up\",\n      date: \"2023-11-15\"\n    }],\n    nextCommunication: {\n      type: \"Meeting\",\n      date: \"2023-12-26\"\n    }\n  }]);\n\n  // Helper functions\n  const isOverdue = date => new Date(date) < new Date();\n  const isToday = date => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    return today.getDate() === targetDate.getDate() && today.getMonth() === targetDate.getMonth() && today.getFullYear() === targetDate.getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationIcon, {\n      count: companies.filter(company => isOverdue(company.nextCommunication.date)).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellSpacing: \"0\",\n      style: {\n        width: \"100%\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Five Communications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Next Scheduled Communication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: companies.map((company, index) => {\n          const {\n            name,\n            communications,\n            nextCommunication\n          } = company;\n          const rowColor = isOverdue(nextCommunication.date) ? \"red\" : isToday(nextCommunication.date) ? \"yellow\" : \"white\";\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: rowColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: communications.map((comm, commIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [comm.type, \" - \", comm.date]\n                }, commIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [nextCommunication.type, \" - \", nextCommunication.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"0e7szZ4gakjDnQq921EFfeCN49w=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","NotificationIcon","jsxDEV","_jsxDEV","UserDashboard","_s","companies","setCompanies","name","communications","type","date","nextCommunication","isOverdue","Date","isToday","today","targetDate","getDate","getMonth","getFullYear","children","fileName","_jsxFileName","lineNumber","columnNumber","count","filter","company","length","border","cellSpacing","style","width","textAlign","map","index","rowColor","backgroundColor","comm","commIndex","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NotificationIcon } from \"./NotificationIcon\"; // Notifications component\r\n\r\nconst UserDashboard = () => {\r\n  const [companies, setCompanies] = useState([\r\n    {\r\n      name: \"Company 1\",\r\n      communications: [\r\n        { type: \"Email\", date: \"2023-12-20\" },\r\n        { type: \"LinkedIn Post\", date: \"2023-12-15\" },\r\n        { type: \"Call\", date: \"2023-12-01\" },\r\n        { type: \"Meeting\", date: \"2023-11-20\" },\r\n        { type: \"Follow-Up\", date: \"2023-11-10\" },\r\n      ],\r\n      nextCommunication: { type: \"Email\", date: \"2023-12-26\" },\r\n    },\r\n    {\r\n      name: \"Company 2\",\r\n      communications: [\r\n        { type: \"Call\", date: \"2023-12-18\" },\r\n        { type: \"Email\", date: \"2023-12-12\" },\r\n        { type: \"LinkedIn Post\", date: \"2023-12-05\" },\r\n        { type: \"Meeting\", date: \"2023-11-25\" },\r\n        { type: \"Follow-Up\", date: \"2023-11-15\" },\r\n      ],\r\n      nextCommunication: { type: \"Meeting\", date: \"2023-12-26\" },\r\n    },\r\n  ]);\r\n\r\n  // Helper functions\r\n  const isOverdue = (date) => new Date(date) < new Date();\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(date);\r\n    return (\r\n      today.getDate() === targetDate.getDate() &&\r\n      today.getMonth() === targetDate.getMonth() &&\r\n      today.getFullYear() === targetDate.getFullYear()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Dashboard</h2>\r\n      {/* Notifications */}\r\n      <NotificationIcon\r\n        count={companies.filter((company) =>\r\n          isOverdue(company.nextCommunication.date)\r\n        ).length}\r\n      />\r\n      {/* Company grid */}\r\n      <table border=\"1\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Company Name</th>\r\n            <th>Last Five Communications</th>\r\n            <th>Next Scheduled Communication</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companies.map((company, index) => {\r\n            const { name, communications, nextCommunication } = company;\r\n            const rowColor = isOverdue(nextCommunication.date)\r\n              ? \"red\"\r\n              : isToday(nextCommunication.date)\r\n              ? \"yellow\"\r\n              : \"white\";\r\n\r\n            return (\r\n              <tr key={index} style={{ backgroundColor: rowColor }}>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <ul>\r\n                    {communications.map((comm, commIndex) => (\r\n                      <li key={commIndex}>\r\n                        {comm.type} - {comm.date}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </td>\r\n                <td>\r\n                  {nextCommunication.type} - {nextCommunication.date}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}