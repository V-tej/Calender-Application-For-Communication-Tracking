{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactCalendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { Container, Typography, Card, CardContent, Button, Grid, Tooltip, Badge, Paper, Table, TableBody, TableCell, TableHead, TableRow, FormControlLabel, Divider, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { format, parseISO, isToday, isBefore, addDays } from \"date-fns\"; // to handle date formatting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  // State for communications\n  const [communications] = useState([{\n    company: \"Company 1\",\n    type: \"LinkedIn Post\",\n    date: \"2023-09-01\",\n    isPast: true,\n    notes: \"Completed with good engagement\"\n  }, {\n    company: \"Company 2\",\n    type: \"Email\",\n    date: \"2023-10-20\",\n    isPast: true,\n    notes: \"Follow-up needed\"\n  }, {\n    company: \"Company 3\",\n    type: \"Phone Call\",\n    date: \"2024-01-15\",\n    isPast: false,\n    notes: \"\"\n  },\n  // upcoming\n  {\n    company: \"Company 4\",\n    type: \"LinkedIn Message\",\n    date: \"2024-02-10\",\n    isPast: false,\n    notes: \"\"\n  } // upcoming\n  ]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [companies, setCompanies] = useState([{\n    name: 'Company A',\n    communicationDueDate: '2024-12-25',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false\n  }, {\n    name: 'Company B',\n    communicationDueDate: '2024-12-26',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false\n  }, {\n    name: 'Company C',\n    communicationDueDate: '2024-12-30',\n    highlightDisabled: false,\n    communicationStatus: '',\n    isSelected: false\n  }]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const [communicationDetails, setCommunicationDetails] = useState({\n    type: \"\",\n    date: \"\",\n    notes: \"\"\n  });\n  const [notifications, setNotifications] = useState({\n    overdue: 0,\n    today: 0\n  });\n  useEffect(() => {\n    // Check for overdue and today tasks for notifications\n    const overdue = companies.filter(company => isBefore(parseISO(company.communicationDueDate), new Date()) && !company.highlightDisabled).length;\n    const today = companies.filter(company => isToday(parseISO(company.communicationDueDate)) && !company.highlightDisabled).length;\n    setNotifications({\n      overdue,\n      today\n    });\n  }, [companies]);\n\n  // Handle checkbox selection for multiple companies\n  const handleCompanySelect = index => {\n    const updatedCompanies = [...companies];\n    updatedCompanies[index].isSelected = !updatedCompanies[index].isSelected;\n    setCompanies(updatedCompanies);\n    setSelectedCompanies(updatedCompanies.filter(company => company.isSelected));\n  };\n\n  // Open communication modal\n  const openModal = () => {\n    if (selectedCompanies.length > 0) {\n      setModalOpen(true);\n    } else {\n      alert(\"Please select at least one company.\");\n    }\n  };\n\n  // Handle form submission (log communication)\n  const handleSubmitCommunication = () => {\n    // Reset highlights (red or yellow) for selected companies\n    const updatedCompanies = companies.map(company => {\n      if (company.isSelected) {\n        company.highlightDisabled = true; // Disable highlight after communication is logged\n      }\n      return company;\n    });\n    setCompanies(updatedCompanies);\n    setModalOpen(false);\n    setCommunicationDetails({\n      type: \"\",\n      date: \"\",\n      notes: \"\"\n    });\n  };\n\n  // Handle modal input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCommunicationDetails({\n      ...communicationDetails,\n      [name]: value\n    });\n  };\n\n  // Function to determine the highlight color (red, yellow)\n  const getHighlightColor = companyDueDate => {\n    const dueDate = parseISO(companyDueDate);\n    if (isBefore(dueDate, new Date()) && !company.highlightDisabled) {\n      return \"red\"; // Overdue\n    } else if (isToday(dueDate) && !company.highlightDisabled) {\n      return \"yellow\"; // Due today\n    }\n    return \"none\";\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      marginBottom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: notifications.overdue + notifications.today,\n          color: \"error\",\n          overlap: \"circular\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n        onChange: setSelectedDate,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Date: \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: companies.map((company, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: getHighlightColor(company.communicationDueDate) === \"red\" ? \"rgba(255, 99, 71, 0.3)\" : getHighlightColor(company.communicationDueDate) === \"yellow\" ? \"rgba(255, 255, 0, 0.3)\" : \"transparent\",\n            transition: \"background-color 0.3s\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Next Communication Due: \", format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: company.isSelected,\n                onChange: () => handleCompanySelect(index),\n                name: `select-${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this),\n              label: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            marginTop: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: openModal,\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 20\n      }, this),\n      children: \"Communication Performed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Log Communication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Type of Communication\",\n          name: \"type\",\n          value: communicationDetails.type,\n          onChange: handleInputChange,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Date of Communication\",\n          type: \"date\",\n          name: \"date\",\n          value: communicationDetails.date,\n          onChange: handleInputChange,\n          InputLabelProps: {\n            shrink: true\n          },\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Add Notes\",\n          name: \"notes\",\n          value: communicationDetails.notes,\n          onChange: handleInputChange,\n          multiline: true,\n          rows: 4,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalOpen(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmitCommunication,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        marginTop: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Five Communications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next Scheduled Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: communications.map((comm, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.isPast ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: `Notes: ${comm.notes}`,\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    cursor: \"pointer\",\n                    textDecoration: \"underline\"\n                  },\n                  children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 32\n                }, this),\n                children: \"Log Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"M/GMliYVQIRXwAg1XDka/rUNJWk=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ReactCalendar","Container","Typography","Card","CardContent","Button","Grid","Tooltip","Badge","Paper","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Divider","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","TextField","NotificationsIcon","AddIcon","format","parseISO","isToday","isBefore","addDays","jsxDEV","_jsxDEV","UserDashboard","_s","communications","company","type","date","isPast","notes","selectedDate","setSelectedDate","Date","companies","setCompanies","name","communicationDueDate","highlightDisabled","communicationStatus","isSelected","modalOpen","setModalOpen","selectedCompanies","setSelectedCompanies","communicationDetails","setCommunicationDetails","notifications","setNotifications","overdue","today","filter","length","handleCompanySelect","index","updatedCompanies","openModal","alert","handleSubmitCommunication","map","handleInputChange","e","value","target","getHighlightColor","companyDueDate","dueDate","children","container","alignItems","spacing","marginBottom","item","badgeContent","color","overlap","anchorOrigin","vertical","horizontal","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","style","display","flexDirection","onChange","toLocaleDateString","xs","sm","md","sx","backgroundColor","transition","control","checked","label","marginTop","onClick","startIcon","open","onClose","fullWidth","InputLabelProps","shrink","multiline","rows","align","comm","title","arrow","cursor","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactCalendar from \"react-calendar\"; \r\nimport 'react-calendar/dist/Calendar.css'; \r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  Badge,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  FormControlLabel,\r\n  Divider,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { format, parseISO, isToday, isBefore, addDays } from \"date-fns\"; // to handle date formatting\r\n\r\nfunction UserDashboard() {\r\n  // State for communications\r\n  const [communications] = useState([\r\n    { company: \"Company 1\", type: \"LinkedIn Post\", date: \"2023-09-01\", isPast: true, notes: \"Completed with good engagement\" },\r\n    { company: \"Company 2\", type: \"Email\", date: \"2023-10-20\", isPast: true, notes: \"Follow-up needed\" },\r\n    { company: \"Company 3\", type: \"Phone Call\", date: \"2024-01-15\", isPast: false, notes: \"\" }, // upcoming\r\n    { company: \"Company 4\", type: \"LinkedIn Message\", date: \"2024-02-10\", isPast: false, notes: \"\" }, // upcoming\r\n  ]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [companies, setCompanies] = useState([\r\n    { name: 'Company A', communicationDueDate: '2024-12-25', highlightDisabled: false, communicationStatus: '', isSelected: false },\r\n    { name: 'Company B', communicationDueDate: '2024-12-26', highlightDisabled: false, communicationStatus: '', isSelected: false },\r\n    { name: 'Company C', communicationDueDate: '2024-12-30', highlightDisabled: false, communicationStatus: '', isSelected: false },\r\n  ]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\r\n  const [communicationDetails, setCommunicationDetails] = useState({ type: \"\", date: \"\", notes: \"\" });\r\n  const [notifications, setNotifications] = useState({ overdue: 0, today: 0 });\r\n\r\n  useEffect(() => {\r\n    // Check for overdue and today tasks for notifications\r\n    const overdue = companies.filter((company) => isBefore(parseISO(company.communicationDueDate), new Date()) && !company.highlightDisabled).length;\r\n    const today = companies.filter((company) => isToday(parseISO(company.communicationDueDate)) && !company.highlightDisabled).length;\r\n\r\n    setNotifications({ overdue, today });\r\n  }, [companies]);\r\n\r\n  // Handle checkbox selection for multiple companies\r\n  const handleCompanySelect = (index) => {\r\n    const updatedCompanies = [...companies];\r\n    updatedCompanies[index].isSelected = !updatedCompanies[index].isSelected;\r\n    setCompanies(updatedCompanies);\r\n    setSelectedCompanies(updatedCompanies.filter(company => company.isSelected));\r\n  };\r\n\r\n  // Open communication modal\r\n  const openModal = () => {\r\n    if (selectedCompanies.length > 0) {\r\n      setModalOpen(true);\r\n    } else {\r\n      alert(\"Please select at least one company.\");\r\n    }\r\n  };\r\n\r\n  // Handle form submission (log communication)\r\n  const handleSubmitCommunication = () => {\r\n    // Reset highlights (red or yellow) for selected companies\r\n    const updatedCompanies = companies.map(company => {\r\n      if (company.isSelected) {\r\n        company.highlightDisabled = true; // Disable highlight after communication is logged\r\n      }\r\n      return company;\r\n    });\r\n    setCompanies(updatedCompanies);\r\n    setModalOpen(false);\r\n    setCommunicationDetails({ type: \"\", date: \"\", notes: \"\" });\r\n  };\r\n\r\n  // Handle modal input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCommunicationDetails({ ...communicationDetails, [name]: value });\r\n  };\r\n\r\n  // Function to determine the highlight color (red, yellow)\r\n  const getHighlightColor = (companyDueDate) => {\r\n    const dueDate = parseISO(companyDueDate);\r\n    if (isBefore(dueDate, new Date()) && !company.highlightDisabled) {\r\n      return \"red\"; // Overdue\r\n    } else if (isToday(dueDate) && !company.highlightDisabled) {\r\n      return \"yellow\"; // Due today\r\n    }\r\n    return \"none\";\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <Grid container alignItems=\"center\" spacing={2} marginBottom={2}>\r\n        <Grid item>\r\n          <Badge\r\n            badgeContent={notifications.overdue + notifications.today}\r\n            color=\"error\"\r\n            overlap=\"circular\"\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <NotificationsIcon fontSize=\"large\" />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            User Dashboard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Calendar View */}\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        <h3>Select a Date</h3>\r\n        <ReactCalendar\r\n          onChange={setSelectedDate}\r\n          value={selectedDate}\r\n        />\r\n        <p>Selected Date: {selectedDate.toLocaleDateString()}</p>\r\n      </div>\r\n\r\n      {/* Company List with Checkbox for Selection */}\r\n      <Grid container spacing={2}>\r\n        {companies.map((company, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor:\r\n                  getHighlightColor(company.communicationDueDate) === \"red\" ? \"rgba(255, 99, 71, 0.3)\" : \r\n                  getHighlightColor(company.communicationDueDate) === \"yellow\" ? \"rgba(255, 255, 0, 0.3)\" : \"transparent\",\r\n                transition: \"background-color 0.3s\",\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{company.name}</Typography>\r\n                <Typography>\r\n                  Next Communication Due: {format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')}\r\n                </Typography>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={company.isSelected}\r\n                      onChange={() => handleCompanySelect(index)}\r\n                      name={`select-${index}`}\r\n                    />\r\n                  }\r\n                  label=\"Select\"\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n            <Divider sx={{ marginTop: 2 }} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Button to Trigger Communication Logging */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={openModal}\r\n        startIcon={<AddIcon />}\r\n      >\r\n        Communication Performed\r\n      </Button>\r\n\r\n      {/* Communication Modal */}\r\n      <Dialog open={modalOpen} onClose={() => setModalOpen(false)}>\r\n        <DialogTitle>Log Communication</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Type of Communication\"\r\n            name=\"type\"\r\n            value={communicationDetails.type}\r\n            onChange={handleInputChange}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Date of Communication\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={communicationDetails.date}\r\n            onChange={handleInputChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Add Notes\"\r\n            name=\"notes\"\r\n            value={communicationDetails.notes}\r\n            onChange={handleInputChange}\r\n            multiline\r\n            rows={4}\r\n            sx={{ marginBottom: 2 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setModalOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmitCommunication}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Communications Table */}\r\n      <Paper sx={{ marginTop: 4 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell><strong>Company Name</strong></TableCell>\r\n              <TableCell><strong>Last Five Communications</strong></TableCell>\r\n              <TableCell><strong>Next Scheduled Communication</strong></TableCell>\r\n              <TableCell align=\"center\"><strong>Actions</strong></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {communications.map((comm, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{comm.company}</TableCell>\r\n                <TableCell>\r\n                  {comm.isPast ? (\r\n                    <Tooltip title={`Notes: ${comm.notes}`} arrow>\r\n                      <Typography variant=\"body2\" sx={{ cursor: \"pointer\", textDecoration: \"underline\" }}>\r\n                        {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                      </Typography>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Typography variant=\"body2\">{comm.type} - {new Date(comm.date).toLocaleDateString()}</Typography>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{comm.type} - {new Date(comm.date).toLocaleDateString()}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                  >\r\n                    Log Communication\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}