{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Removed useEffect import as it's not being used\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid, Tooltip, Badge, Paper, Table, TableBody, TableCell, TableHead, TableRow, FormControlLabel, Switch, Divider } from \"@mui/material\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  // State for communications\n  const [communications] = useState([{\n    company: \"Company 1\",\n    type: \"LinkedIn Post\",\n    date: \"2023-09-01\",\n    isPast: true,\n    notes: \"Completed with good engagement\"\n  }, {\n    company: \"Company 2\",\n    type: \"Email\",\n    date: \"2023-10-20\",\n    isPast: true,\n    notes: \"Follow-up needed\"\n  }, {\n    company: \"Company 3\",\n    type: \"Phone Call\",\n    date: \"2024-01-15\",\n    isPast: false,\n    notes: \"\"\n  },\n  // upcoming\n  {\n    company: \"Company 4\",\n    type: \"LinkedIn Message\",\n    date: \"2024-02-10\",\n    isPast: false,\n    notes: \"\"\n  } // upcoming\n  ]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [companies, setCompanies] = useState([{\n    name: 'Company A',\n    communicationDueDate: '2024-12-25',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }, {\n    name: 'Company B',\n    communicationDueDate: '2024-12-26',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }, {\n    name: 'Company C',\n    communicationDueDate: '2024-12-30',\n    highlightDisabled: false,\n    communicationStatus: ''\n  }]);\n  const handleHighlightToggle = index => {\n    const updatedCompanies = companies.map((company, idx) => {\n      if (idx === index) {\n        company.highlightDisabled = !company.highlightDisabled; // Toggle the highlight visibility\n      }\n      return company;\n    });\n    setCompanies(updatedCompanies);\n  };\n  const getHighlightColor = dueDate => {\n    const today = new Date();\n    const dueDateObj = parseISO(dueDate);\n    const isToday = format(today, 'yyyy-MM-dd') === format(dueDateObj, 'yyyy-MM-dd');\n    const isOverdue = today > dueDateObj;\n    if (isOverdue) return 'red';\n    if (isToday) return 'yellow';\n    return 'transparent'; // No highlight\n  };\n  const getCommunicationsByDate = date => {\n    const formattedDate = date.toLocaleDateString();\n    return communications.filter(comm => comm.date === formattedDate);\n  };\n  const getRowColor = date => {\n    const today = new Date().toISOString().slice(0, 10);\n    const commDate = new Date(date).toISOString().slice(0, 10);\n    if (commDate < today) return \"#f8d7da\"; // Red for overdue\n    if (commDate === today) return \"#fff3cd\"; // Yellow for due today\n    return \"#ffffff\"; // White for future dates\n  };\n  const handleAddCommunication = companyName => {\n    alert(`Log communication for ${companyName}!`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      marginBottom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: 1,\n          color: \"error\",\n          overlap: \"circular\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n        onChange: setSelectedDate,\n        value: selectedDate,\n        tileContent: ({\n          date,\n          view\n        }) => {\n          const communicationsForDate = getCommunicationsByDate(date);\n          return communicationsForDate.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [communicationsForDate.length, \" comm.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Date: \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"communications\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Communications for \", selectedDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), getCommunicationsByDate(selectedDate).length > 0 ? getCommunicationsByDate(selectedDate).map((comm, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [comm.type, \" - \", comm.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No communications for this day.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        marginTop: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Five Communications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Next Scheduled Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: communications.map((comm, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              backgroundColor: getRowColor(comm.date)\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: comm.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: comm.isPast && comm.notes ? comm.notes : '',\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [comm.type, \" - \", new Date(comm.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleAddCommunication(comm.company),\n                children: \"Log Communication\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Past Communications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: communications.filter(comm => comm.isPast).map((comm, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [comm.company, \": \", comm.type, \" on \", comm.date]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upcoming Communications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: communications.filter(comm => !comm.isPast).map((comm, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [comm.company, \": \", comm.type, \" on \", comm.date]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: companies.map((company, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: company.highlightDisabled ? 'white' : getHighlightColor(company.communicationDueDate),\n            transition: 'background-color 0.3s'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Next Communication Due: \", format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: company.highlightDisabled,\n                onChange: () => handleHighlightToggle(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this),\n              label: \"Disable Highlight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            marginTop: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"BkwJMIwYm6tmLIQt7+eYzt4kajQ=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","ReactCalendar","Container","Typography","Card","CardContent","CardActions","Button","Grid","Tooltip","Badge","Paper","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Switch","Divider","NotificationsIcon","AddIcon","format","parseISO","jsxDEV","_jsxDEV","UserDashboard","_s","communications","company","type","date","isPast","notes","selectedDate","setSelectedDate","Date","companies","setCompanies","name","communicationDueDate","highlightDisabled","communicationStatus","handleHighlightToggle","index","updatedCompanies","map","idx","getHighlightColor","dueDate","today","dueDateObj","isToday","isOverdue","getCommunicationsByDate","formattedDate","toLocaleDateString","filter","comm","getRowColor","toISOString","slice","commDate","handleAddCommunication","companyName","alert","children","container","alignItems","spacing","marginBottom","item","badgeContent","color","overlap","anchorOrigin","vertical","horizontal","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","style","display","flexDirection","onChange","value","tileContent","view","communicationsForDate","length","className","sx","marginTop","align","backgroundColor","title","arrow","startIcon","onClick","xs","sm","md","transition","control","checked","label","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState } from \"react\"; // Removed useEffect import as it's not being used\r\nimport ReactCalendar from \"react-calendar\"; // Import the react-calendar library\r\nimport 'react-calendar/dist/Calendar.css'; // Import CSS for the calendar\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  Badge,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  FormControlLabel,\r\n  Switch,\r\n  Divider\r\n} from \"@mui/material\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { format, parseISO } from \"date-fns\"; // to handle date formatting\r\n\r\nfunction UserDashboard() {\r\n  // State for communications\r\n  const [communications] = useState([\r\n    { company: \"Company 1\", type: \"LinkedIn Post\", date: \"2023-09-01\", isPast: true, notes: \"Completed with good engagement\" },\r\n    { company: \"Company 2\", type: \"Email\", date: \"2023-10-20\", isPast: true, notes: \"Follow-up needed\" },\r\n    { company: \"Company 3\", type: \"Phone Call\", date: \"2024-01-15\", isPast: false, notes: \"\" }, // upcoming\r\n    { company: \"Company 4\", type: \"LinkedIn Message\", date: \"2024-02-10\", isPast: false, notes: \"\" }, // upcoming\r\n  ]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [companies, setCompanies] = useState([\r\n    {\r\n      name: 'Company A',\r\n      communicationDueDate: '2024-12-25',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n    {\r\n      name: 'Company B',\r\n      communicationDueDate: '2024-12-26',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n    {\r\n      name: 'Company C',\r\n      communicationDueDate: '2024-12-30',\r\n      highlightDisabled: false,\r\n      communicationStatus: '',\r\n    },\r\n  ]);\r\n\r\n  const handleHighlightToggle = (index) => {\r\n    const updatedCompanies = companies.map((company, idx) => {\r\n      if (idx === index) {\r\n        company.highlightDisabled = !company.highlightDisabled; // Toggle the highlight visibility\r\n      }\r\n      return company;\r\n    });\r\n    setCompanies(updatedCompanies);\r\n  };\r\n\r\n  const getHighlightColor = (dueDate) => {\r\n    const today = new Date();\r\n    const dueDateObj = parseISO(dueDate);\r\n    const isToday = format(today, 'yyyy-MM-dd') === format(dueDateObj, 'yyyy-MM-dd');\r\n    const isOverdue = today > dueDateObj;\r\n\r\n    if (isOverdue) return 'red';\r\n    if (isToday) return 'yellow';\r\n    return 'transparent'; // No highlight\r\n  };\r\n\r\n  const getCommunicationsByDate = (date) => {\r\n    const formattedDate = date.toLocaleDateString();\r\n    return communications.filter((comm) => comm.date === formattedDate);\r\n  };\r\n\r\n  const getRowColor = (date) => {\r\n    const today = new Date().toISOString().slice(0, 10);\r\n    const commDate = new Date(date).toISOString().slice(0, 10);\r\n    if (commDate < today) return \"#f8d7da\"; // Red for overdue\r\n    if (commDate === today) return \"#fff3cd\"; // Yellow for due today\r\n    return \"#ffffff\"; // White for future dates\r\n  };\r\n\r\n  const handleAddCommunication = (companyName) => {\r\n    alert(`Log communication for ${companyName}!`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container alignItems=\"center\" spacing={2} marginBottom={2}>\r\n        <Grid item>\r\n          <Badge\r\n            badgeContent={1}\r\n            color=\"error\"\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n          >\r\n            <NotificationsIcon fontSize=\"large\" />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            User Dashboard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Calendar View */}\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        <h3>Select a Date</h3>\r\n        <ReactCalendar\r\n          onChange={setSelectedDate}\r\n          value={selectedDate}\r\n          tileContent={({ date, view }) => {\r\n            const communicationsForDate = getCommunicationsByDate(date);\r\n            return (\r\n              communicationsForDate.length > 0 && (\r\n                <div>\r\n                  <span>{communicationsForDate.length} comm.</span>\r\n                </div>\r\n              )\r\n            );\r\n          }}\r\n        />\r\n        <p>Selected Date: {selectedDate.toLocaleDateString()}</p>\r\n\r\n        {/* Show communications for selected date */}\r\n        <div className=\"communications\">\r\n          <h4>Communications for {selectedDate.toLocaleDateString()}</h4>\r\n          {getCommunicationsByDate(selectedDate).length > 0 ? (\r\n            getCommunicationsByDate(selectedDate).map((comm, index) => (\r\n              <div key={index}>\r\n                <p>{comm.type} - {comm.company}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No communications for this day.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Communications Table */}\r\n      <Paper sx={{ marginTop: 4 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell><strong>Company Name</strong></TableCell>\r\n              <TableCell><strong>Last Five Communications</strong></TableCell>\r\n              <TableCell><strong>Next Scheduled Communication</strong></TableCell>\r\n              <TableCell align=\"center\"><strong>Actions</strong></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {communications.map((comm, index) => (\r\n              <TableRow key={index} style={{ backgroundColor: getRowColor(comm.date) }}>\r\n                <TableCell>{comm.company}</TableCell>\r\n                <TableCell>\r\n                  <Tooltip title={comm.isPast && comm.notes ? comm.notes : ''} arrow>\r\n                    <Typography variant=\"body2\">\r\n                      {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {comm.type} - {new Date(comm.date).toLocaleDateString()}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={() => handleAddCommunication(comm.company)}\r\n                  >\r\n                    Log Communication\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      {/* Past and Upcoming Communications Lists */}\r\n      <h3>Past Communications</h3>\r\n      <ul>\r\n        {communications\r\n          .filter((comm) => comm.isPast)\r\n          .map((comm, index) => (\r\n            <li key={index}>\r\n              {comm.company}: {comm.type} on {comm.date}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <h3>Upcoming Communications</h3>\r\n      <ul>\r\n        {communications\r\n          .filter((comm) => !comm.isPast)\r\n          .map((comm, index) => (\r\n            <li key={index}>\r\n              {comm.company}: {comm.type} on {comm.date}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      {/* Company List with Highlight Toggle */}\r\n      <Grid container spacing={2}>\r\n        {companies.map((company, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: company.highlightDisabled\r\n                  ? 'white'\r\n                  : getHighlightColor(company.communicationDueDate),\r\n                transition: 'background-color 0.3s',\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{company.name}</Typography>\r\n                <Typography>\r\n                  Next Communication Due: {format(parseISO(company.communicationDueDate), 'MMMM dd, yyyy')}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                {/* Disable Highlight Switch */}\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={company.highlightDisabled}\r\n                      onChange={() => handleHighlightToggle(index)}\r\n                    />\r\n                  }\r\n                  label=\"Disable Highlight\"\r\n                />\r\n              </CardActions>\r\n            </Card>\r\n            <Divider sx={{ marginTop: 2 }} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;AAC5C,OAAO,kCAAkC,CAAC,CAAC;AAC3C,SACEC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,WAAW,EACXC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,gBAAgB,EAChBC,MAAM,EACNC,OAAO,QACF,eAAe;AACtB,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,MAAM,EAAEC,QAAQ,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAChC;IAAE6B,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAiC,CAAC,EAC1H;IAAEJ,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAmB,CAAC,EACpG;IAAEJ,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAE;EAC5F;IAAEJ,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAE;EAAA,CACnG,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,IAAIoC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,CACzC;IACEuC,IAAI,EAAE,WAAW;IACjBC,oBAAoB,EAAE,YAAY;IAClCC,iBAAiB,EAAE,KAAK;IACxBC,mBAAmB,EAAE;EACvB,CAAC,EACD;IACEH,IAAI,EAAE,WAAW;IACjBC,oBAAoB,EAAE,YAAY;IAClCC,iBAAiB,EAAE,KAAK;IACxBC,mBAAmB,EAAE;EACvB,CAAC,EACD;IACEH,IAAI,EAAE,WAAW;IACjBC,oBAAoB,EAAE,YAAY;IAClCC,iBAAiB,EAAE,KAAK;IACxBC,mBAAmB,EAAE;EACvB,CAAC,CACF,CAAC;EAEF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,gBAAgB,GAAGR,SAAS,CAACS,GAAG,CAAC,CAACjB,OAAO,EAAEkB,GAAG,KAAK;MACvD,IAAIA,GAAG,KAAKH,KAAK,EAAE;QACjBf,OAAO,CAACY,iBAAiB,GAAG,CAACZ,OAAO,CAACY,iBAAiB,CAAC,CAAC;MAC1D;MACA,OAAOZ,OAAO;IAChB,CAAC,CAAC;IACFS,YAAY,CAACO,gBAAgB,CAAC;EAChC,CAAC;EAED,MAAMG,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,KAAK,GAAG,IAAId,IAAI,CAAC,CAAC;IACxB,MAAMe,UAAU,GAAG5B,QAAQ,CAAC0B,OAAO,CAAC;IACpC,MAAMG,OAAO,GAAG9B,MAAM,CAAC4B,KAAK,EAAE,YAAY,CAAC,KAAK5B,MAAM,CAAC6B,UAAU,EAAE,YAAY,CAAC;IAChF,MAAME,SAAS,GAAGH,KAAK,GAAGC,UAAU;IAEpC,IAAIE,SAAS,EAAE,OAAO,KAAK;IAC3B,IAAID,OAAO,EAAE,OAAO,QAAQ;IAC5B,OAAO,aAAa,CAAC,CAAC;EACxB,CAAC;EAED,MAAME,uBAAuB,GAAIvB,IAAI,IAAK;IACxC,MAAMwB,aAAa,GAAGxB,IAAI,CAACyB,kBAAkB,CAAC,CAAC;IAC/C,OAAO5B,cAAc,CAAC6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC3B,IAAI,KAAKwB,aAAa,CAAC;EACrE,CAAC;EAED,MAAMI,WAAW,GAAI5B,IAAI,IAAK;IAC5B,MAAMmB,KAAK,GAAG,IAAId,IAAI,CAAC,CAAC,CAACwB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACnD,MAAMC,QAAQ,GAAG,IAAI1B,IAAI,CAACL,IAAI,CAAC,CAAC6B,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1D,IAAIC,QAAQ,GAAGZ,KAAK,EAAE,OAAO,SAAS,CAAC,CAAC;IACxC,IAAIY,QAAQ,KAAKZ,KAAK,EAAE,OAAO,SAAS,CAAC,CAAC;IAC1C,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,MAAMa,sBAAsB,GAAIC,WAAW,IAAK;IAC9CC,KAAK,CAAC,yBAAyBD,WAAW,GAAG,CAAC;EAChD,CAAC;EAED,oBACEvC,OAAA,CAACvB,SAAS;IAAAgE,QAAA,gBACRzC,OAAA,CAACjB,IAAI;MAAC2D,SAAS;MAACC,UAAU,EAAC,QAAQ;MAACC,OAAO,EAAE,CAAE;MAACC,YAAY,EAAE,CAAE;MAAAJ,QAAA,gBAC9DzC,OAAA,CAACjB,IAAI;QAAC+D,IAAI;QAAAL,QAAA,eACRzC,OAAA,CAACf,KAAK;UACJ8D,YAAY,EAAE,CAAE;UAChBC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAC,UAAU;UAClBC,YAAY,EAAE;YACZC,QAAQ,EAAE,KAAK;YACfC,UAAU,EAAE;UACd,CAAE;UAAAX,QAAA,eAEFzC,OAAA,CAACL,iBAAiB;YAAC0D,QAAQ,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACPzD,OAAA,CAACjB,IAAI;QAAC+D,IAAI;QAAAL,QAAA,eACRzC,OAAA,CAACtB,UAAU;UAACgF,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAAAlB,QAAA,EAAC;QAEzC;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGPzD,OAAA;MAAK4D,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEnB,UAAU,EAAE;MAAS,CAAE;MAAAF,QAAA,gBAC7EzC,OAAA;QAAAyC,QAAA,EAAI;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBzD,OAAA,CAACxB,aAAa;QACZuF,QAAQ,EAAErD,eAAgB;QAC1BsD,KAAK,EAAEvD,YAAa;QACpBwD,WAAW,EAAEA,CAAC;UAAE3D,IAAI;UAAE4D;QAAK,CAAC,KAAK;UAC/B,MAAMC,qBAAqB,GAAGtC,uBAAuB,CAACvB,IAAI,CAAC;UAC3D,OACE6D,qBAAqB,CAACC,MAAM,GAAG,CAAC,iBAC9BpE,OAAA;YAAAyC,QAAA,eACEzC,OAAA;cAAAyC,QAAA,GAAO0B,qBAAqB,CAACC,MAAM,EAAC,QAAM;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CACN;QAEL;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFzD,OAAA;QAAAyC,QAAA,GAAG,iBAAe,EAAChC,YAAY,CAACsB,kBAAkB,CAAC,CAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGzDzD,OAAA;QAAKqE,SAAS,EAAC,gBAAgB;QAAA5B,QAAA,gBAC7BzC,OAAA;UAAAyC,QAAA,GAAI,qBAAmB,EAAChC,YAAY,CAACsB,kBAAkB,CAAC,CAAC;QAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9D5B,uBAAuB,CAACpB,YAAY,CAAC,CAAC2D,MAAM,GAAG,CAAC,GAC/CvC,uBAAuB,CAACpB,YAAY,CAAC,CAACY,GAAG,CAAC,CAACY,IAAI,EAAEd,KAAK,kBACpDnB,OAAA;UAAAyC,QAAA,eACEzC,OAAA;YAAAyC,QAAA,GAAIR,IAAI,CAAC5B,IAAI,EAAC,KAAG,EAAC4B,IAAI,CAAC7B,OAAO;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GAD3BtC,KAAK;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN,CAAC,gBAEFzD,OAAA;UAAAyC,QAAA,EAAG;QAA+B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACtC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzD,OAAA,CAACd,KAAK;MAACoF,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAA9B,QAAA,eAC1BzC,OAAA,CAACb,KAAK;QAAAsD,QAAA,gBACJzC,OAAA,CAACV,SAAS;UAAAmD,QAAA,eACRzC,OAAA,CAACT,QAAQ;YAAAkD,QAAA,gBACPzC,OAAA,CAACX,SAAS;cAAAoD,QAAA,eAACzC,OAAA;gBAAAyC,QAAA,EAAQ;cAAY;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACpDzD,OAAA,CAACX,SAAS;cAAAoD,QAAA,eAACzC,OAAA;gBAAAyC,QAAA,EAAQ;cAAwB;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChEzD,OAAA,CAACX,SAAS;cAAAoD,QAAA,eAACzC,OAAA;gBAAAyC,QAAA,EAAQ;cAA4B;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACpEzD,OAAA,CAACX,SAAS;cAACmF,KAAK,EAAC,QAAQ;cAAA/B,QAAA,eAACzC,OAAA;gBAAAyC,QAAA,EAAQ;cAAO;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZzD,OAAA,CAACZ,SAAS;UAAAqD,QAAA,EACPtC,cAAc,CAACkB,GAAG,CAAC,CAACY,IAAI,EAAEd,KAAK,kBAC9BnB,OAAA,CAACT,QAAQ;YAAaqE,KAAK,EAAE;cAAEa,eAAe,EAAEvC,WAAW,CAACD,IAAI,CAAC3B,IAAI;YAAE,CAAE;YAAAmC,QAAA,gBACvEzC,OAAA,CAACX,SAAS;cAAAoD,QAAA,EAAER,IAAI,CAAC7B;YAAO;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACrCzD,OAAA,CAACX,SAAS;cAAAoD,QAAA,eACRzC,OAAA,CAAChB,OAAO;gBAAC0F,KAAK,EAAEzC,IAAI,CAAC1B,MAAM,IAAI0B,IAAI,CAACzB,KAAK,GAAGyB,IAAI,CAACzB,KAAK,GAAG,EAAG;gBAACmE,KAAK;gBAAAlC,QAAA,eAChEzC,OAAA,CAACtB,UAAU;kBAACgF,OAAO,EAAC,OAAO;kBAAAjB,QAAA,GACxBR,IAAI,CAAC5B,IAAI,EAAC,KAAG,EAAC,IAAIM,IAAI,CAACsB,IAAI,CAAC3B,IAAI,CAAC,CAACyB,kBAAkB,CAAC,CAAC;gBAAA;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACZzD,OAAA,CAACX,SAAS;cAAAoD,QAAA,GACPR,IAAI,CAAC5B,IAAI,EAAC,KAAG,EAAC,IAAIM,IAAI,CAACsB,IAAI,CAAC3B,IAAI,CAAC,CAACyB,kBAAkB,CAAC,CAAC;YAAA;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,eACZzD,OAAA,CAACX,SAAS;cAACmF,KAAK,EAAC,QAAQ;cAAA/B,QAAA,eACvBzC,OAAA,CAAClB,MAAM;gBACL4E,OAAO,EAAC,WAAW;gBACnBV,KAAK,EAAC,SAAS;gBACf4B,SAAS,eAAE5E,OAAA,CAACJ,OAAO;kBAAA0D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACvBoB,OAAO,EAAEA,CAAA,KAAMvC,sBAAsB,CAACL,IAAI,CAAC7B,OAAO,CAAE;gBAAAqC,QAAA,EACrD;cAED;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GArBCtC,KAAK;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBV,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGRzD,OAAA;MAAAyC,QAAA,EAAI;IAAmB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzD,OAAA;MAAAyC,QAAA,EACGtC,cAAc,CACZ6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC1B,MAAM,CAAC,CAC7Bc,GAAG,CAAC,CAACY,IAAI,EAAEd,KAAK,kBACfnB,OAAA;QAAAyC,QAAA,GACGR,IAAI,CAAC7B,OAAO,EAAC,IAAE,EAAC6B,IAAI,CAAC5B,IAAI,EAAC,MAAI,EAAC4B,IAAI,CAAC3B,IAAI;MAAA,GADlCa,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELzD,OAAA;MAAAyC,QAAA,EAAI;IAAuB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCzD,OAAA;MAAAyC,QAAA,EACGtC,cAAc,CACZ6B,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAC1B,MAAM,CAAC,CAC9Bc,GAAG,CAAC,CAACY,IAAI,EAAEd,KAAK,kBACfnB,OAAA;QAAAyC,QAAA,GACGR,IAAI,CAAC7B,OAAO,EAAC,IAAE,EAAC6B,IAAI,CAAC5B,IAAI,EAAC,MAAI,EAAC4B,IAAI,CAAC3B,IAAI;MAAA,GADlCa,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGLzD,OAAA,CAACjB,IAAI;MAAC2D,SAAS;MAACE,OAAO,EAAE,CAAE;MAAAH,QAAA,EACxB7B,SAAS,CAACS,GAAG,CAAC,CAACjB,OAAO,EAAEe,KAAK,kBAC5BnB,OAAA,CAACjB,IAAI;QAAC+D,IAAI;QAACgC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAvC,QAAA,gBAC9BzC,OAAA,CAACrB,IAAI;UACH2F,EAAE,EAAE;YACFG,eAAe,EAAErE,OAAO,CAACY,iBAAiB,GACtC,OAAO,GACPO,iBAAiB,CAACnB,OAAO,CAACW,oBAAoB,CAAC;YACnDkE,UAAU,EAAE;UACd,CAAE;UAAAxC,QAAA,gBAEFzC,OAAA,CAACpB,WAAW;YAAA6D,QAAA,gBACVzC,OAAA,CAACtB,UAAU;cAACgF,OAAO,EAAC,IAAI;cAAAjB,QAAA,EAAErC,OAAO,CAACU;YAAI;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACpDzD,OAAA,CAACtB,UAAU;cAAA+D,QAAA,GAAC,0BACc,EAAC5C,MAAM,CAACC,QAAQ,CAACM,OAAO,CAACW,oBAAoB,CAAC,EAAE,eAAe,CAAC;YAAA;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACdzD,OAAA,CAACnB,WAAW;YAAA4D,QAAA,eAEVzC,OAAA,CAACR,gBAAgB;cACf0F,OAAO,eACLlF,OAAA,CAACP,MAAM;gBACL0F,OAAO,EAAE/E,OAAO,CAACY,iBAAkB;gBACnC+C,QAAQ,EAAEA,CAAA,KAAM7C,qBAAqB,CAACC,KAAK;cAAE;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CACF;cACD2B,KAAK,EAAC;YAAmB;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACPzD,OAAA,CAACN,OAAO;UAAC4E,EAAE,EAAE;YAAEC,SAAS,EAAE;UAAE;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GA5BGtC,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BrC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB;AAACvD,EAAA,CAnOQD,aAAa;AAAAoF,EAAA,GAAbpF,aAAa;AAqOtB,eAAeA,aAAa;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}