{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\calender-app\\\\src\\\\components\\\\User\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NotificationIcon } from \"./NotificationIcon\"; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [communications, setCommunications] = useState([{\n    company: \"Company 1\",\n    type: \"LinkedIn Post\",\n    date: \"2023-09-01\"\n  }, {\n    company: \"Company 2\",\n    type: \"Email\",\n    date: \"2023-10-20\"\n  }]);\n  const [overdueCount, setOverdueCount] = useState(1); // Example overdue count\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationIcon, {\n      count: overdueCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-list\",\n      children: communications.map((comm, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: comm.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [comm.type, \" - \", comm.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"Communication logged!\"),\n          children: \"Log Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"1aGQcbtyqThiDVNZQLhwBHBSqtw=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","NotificationIcon","jsxDEV","_jsxDEV","UserDashboard","_s","communications","setCommunications","company","type","date","overdueCount","setOverdueCount","children","fileName","_jsxFileName","lineNumber","columnNumber","count","className","map","comm","index","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/varun/calender-app/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NotificationIcon } from \"./NotificationIcon\"; // Ensure this path is correct\r\n\r\nfunction UserDashboard() {\r\n  const [communications, setCommunications] = useState([\r\n    { company: \"Company 1\", type: \"LinkedIn Post\", date: \"2023-09-01\" },\r\n    { company: \"Company 2\", type: \"Email\", date: \"2023-10-20\" },\r\n  ]);\r\n  const [overdueCount, setOverdueCount] = useState(1); // Example overdue count\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Dashboard</h2>\r\n      {/* Display notification icon */}\r\n      <NotificationIcon count={overdueCount} />\r\n      <div className=\"company-list\">\r\n        {/* Iterate through communications */}\r\n        {communications.map((comm, index) => (\r\n          <div key={index}>\r\n            <h3>{comm.company}</h3>\r\n            <p>\r\n              {comm.type} - {comm.date}\r\n            </p>\r\n            <button onClick={() => alert(\"Communication logged!\")}>\r\n              Log Communication\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CACnD;IAAEQ,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAa,CAAC,EACnE;IAAEF,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAa,CAAC,CAC5D,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErD,oBACEG,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvBd,OAAA,CAACF,gBAAgB;MAACiB,KAAK,EAAEP;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCd,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAN,QAAA,EAE1BP,cAAc,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BnB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAKQ,IAAI,CAACb;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBd,OAAA;UAAAU,QAAA,GACGQ,IAAI,CAACZ,IAAI,EAAC,KAAG,EAACY,IAAI,CAACX,IAAI;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACJd,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,uBAAuB,CAAE;UAAAX,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CA5BQD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA8BtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}